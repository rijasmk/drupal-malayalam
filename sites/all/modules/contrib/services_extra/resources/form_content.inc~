<?php

/**
 * Gets access rules.
 *
 * @param $op
 *  $op - Permission requested
 * @return Boolean
 *  Boolean TRUE if the current user has the requested permission
 */
function _form_content_resource_access($op = 'view', $args = array()) {
  switch ($op) {
    case 'view':
      return user_access('administer users');
      break;
  }
}


/**
 * Gets all resource definitions.
 *
 * @return array
 *  An array containing all resources.
 */
function form_content_resources() {
  $resource = array(
    'retrieve' => array(
      'callback' => '_form_content_resources_retrieve',
        'args' => array(
          array(
            'name' => 'type',
            'optional' => FALSE,
            'source' => array('path' => 0),
            'type' => 'string',
            'description' => 'Provide name of content type to get form structure',
          ),
        ),
        'access callback' => '_form_content_resource_access',
        'access arguments' => array('view'),
        'access arguments append' => TRUE,
    ),
  );
  return $resource;
}


/**
 * Returns the form structure. 
 *
 * @param $type
 *   $type - content type name
 * @return
 *   form structure
 */
function _form_content_resources_retrieve($type) 
{ 
  if (isset($type)) {
    $page = $result['node'];
 
    // At first we need to get field's id. If you already know field id, you can ommit this step
    // Get all fields attached to a given node type

    $fields = field_info_instances('node', $type); 
    foreach($fields as $field_id => $value)
    {
      $field_info = field_info_field($field_id);

      $cardinality = $field_info['cardinality'];
      $index = $fields[$field_id]['widget']['weight'];
      $type = $fields[$field_id]['widget']['type'];
      $module_type = $fields[$field_id]['display']['default']['module'];
      $value['cardinality'] =  $cardinality;
      $required = $value['required'];
      $value['required'] =  ($required == 1) ? 1 : 0;
      if($module_type == 'taxonomy')
      {
         $taxonomy = taxonomy_vocabulary_machine_name_load($field_info['settings']['allowed_values'][0]['vocabulary']);
         $value['options'] = taxonomy_get_tree($taxonomy->vid);
      }
      if($module_type == 'list') {
         $allowed_values = $field_info['settings']['allowed_values']; 
         $opt = array();
         $i = 0;
         if($type != "options_onoff" &&  $cardinality == 1)// || $type == "options_select")
         {
           $i = 1;
           $opt[0]['key'] = "_none";
           $opt[0]['value'] = "-none-";
         }
         foreach($allowed_values as $key => $val)
         {
            $opt[$i]['key'] = $key;
            $opt[$i]['value'] = $val;
            $i++;
         }
         $value['options'] = $opt;
      } 
      $field_object->$field_id = $value; 
    }
    return $field_object;
  }
}
